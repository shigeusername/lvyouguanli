<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.project.dao.ComplaintDao">
    <select id="findAllComplaint" resultType="com.example.project.entity.VO.ComplaintVO">
        select complaint.id,
               user.name               as sender,
               tourism_enterprise.name as enterprise,
               complaint.content,
               complaint.level,
               complaint.if_coped,
               complaint.send_date,
               complaint.title
        from complaint,
             user,
             tourism_enterprise
        where complaint.sender = user.id
          and complaint.enterprise_id = tourism_enterprise.id
        limit #{pageNum} ,#{page_size};
    </select>
    <select id="findComplaintById" resultType="com.example.project.entity.VO.ComplaintVO">
        select complaint.id,
               user.name               as sender,
               tourism_enterprise.name as enterprise,
               complaint.content,
               complaint.level,
               complaint.if_coped,
               complaint.send_date,
               complaint.title
        from complaint,
             user,
             tourism_enterprise
        where complaint.sender = user.id
          and complaint.id = #{id}
          and complaint.enterprise_id = tourism_enterprise.id
    </select>
    <select id="findComplaintUnCoped" resultType="com.example.project.entity.VO.ComplaintVO">
        select complaint.id,
               user.name               as sender,
               tourism_enterprise.name as enterprise,
               complaint.content,
               complaint.level,
               complaint.if_coped,
               complaint.send_date,
               complaint.title
        from complaint,
             user,
             tourism_enterprise
        where complaint.sender = user.id
          and complaint.if_coped = 0
          and complaint.enterprise_id = tourism_enterprise.id
        limit #{pageNum} ,#{page_size};
    </select>
    <select id="findComplaintCoped" resultType="com.example.project.entity.VO.ComplaintVO">
        select complaint.id,
               user.name               as sender,
               tourism_enterprise.name as enterprise,
               complaint.content,
               complaint.level,
               complaint.if_coped,
               complaint.send_date,
               complaint.title
        from complaint,
             user,
             tourism_enterprise
        where complaint.sender = user.id
          and complaint.if_coped = 1
          and complaint.enterprise_id = tourism_enterprise.id
        limit #{pageNum} ,#{page_size};
    </select>
    <select id="findNumOfAllComplaint" resultType="java.lang.Integer">
        select count(*)
        from complaint;
    </select>

    <select id="findNumOfComplaintUnCoped" resultType="java.lang.Integer">
        select count(*)
        from complaint
        where complaint.if_coped=0;
    </select>
    <select id="findNumOfComplaintCoped" resultType="java.lang.Integer">
        select count(*)
        from complaint
        where complaint.if_coped=1;
    </select>
    <insert id="AddComplaint">
        insert into complaint (sender, enterprise_id, content, level, if_coped, send_date,title)
        values (#{sender}, #{enterprise_id}, #{content}, #{level}, #{if_coped}, #{send_date},#{title});
    </insert>
    <delete id="DeleteComplaintById">
        delete
        from complaint
        where id = #{id};
    </delete>
    <delete id="DeleteComplaintCoped">
        delete
        from complaint
        where complaint.if_coped=1;
    </delete>
    <update id="UpdateComplaint">
        update complaint
        set sender=#{sender}, enterprise_id=#{enterprise_id}, content=#{content},
        level=#{level}, if_coped=#{if_coped}, send_date=#{send_date},title=#{title}
        where id=#{id}
    </update>
    <update id="ReviewComplaint">
        update complaint
        set if_coped=#{if_coped}
        where id=#{id}
    </update>
</mapper>